events { }

http {
  upstream frontend {
    server event-stack_frontend:3000;
  }
  upstream backend {
    server event-stack_app:8081;
  }
  
  log_format debug_log '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   'X-Original-URI: "$http_x_original_uri"';

  server {
    listen 80;
    server_name 1045269-cs76553.tmweb.ru event-organization.ru;
	
	client_max_body_size 20M;
    client_body_buffer_size 128k;
	
	access_log /var/log/nginx/access.log debug_log;

    # Обработка CORS для preflight-запросов API
    location ~* ^/api(/.*)?$ {
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PATCH, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers $http_access_control_request_headers always;
        add_header Access-Control-Allow-Credentials "true" always;
        return 204;
      }

      # Проксирование API-запросов (сохраняем оригинальный путь)
      proxy_pass http://backend$1$is_args$args;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
	  proxy_set_header X-Original-URI $request_uri;  # Для дебага
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
	  proxy_set_header Authorization $http_authorization;  # Критично для JWT!
      proxy_pass_request_headers on;  # Передавать все заголовки
    }

    # Все остальные запросы - на фронтенд
    location / {
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}